name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: simd-cmp
            asset_name: simd-cmp-linux-amd64
          - os: windows-latest
            artifact_name: simd-cmp.exe
            asset_name: simd-cmp-windows-amd64.exe
          - os: macos-latest
            artifact_name: simd-cmp
            asset_name: simd-cmp-macos-amd64

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt, clippy

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: target/release/${{ matrix.artifact_name }}
        if-no-files-found: error

  # Create a release when a tag is pushed
  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: simd-cmp-linux-amd64
          path: ./

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: simd-cmp-windows-amd64.exe
          path: ./

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: simd-cmp-macos-amd64
          path: ./

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./simd-cmp
          asset_name: simd-cmp-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./simd-cmp.exe
          asset_name: simd-cmp-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./simd-cmp
          asset_name: simd-cmp-macos-amd64
          asset_content_type: application/octet-stream
